{"version":3,"file":"bundle.js","sources":["../src/002.函数的类型.ts","../src/index.ts"],"sourcesContent":["type Sum = (a: number, b: number) => number\r\nlet sum01: Sum = function (v1, v2) {    // 1.使用type\r\n    return v1 + v2\r\n}\r\n\r\nfunction sum02(v1: number, v2: number): number {    // 2.直接指定\r\n    return v1 + v2\r\n}\r\n\r\nfunction sum03(v1: number, v2?: number): number {   // 3.可选参数\r\n    return v1\r\n}\r\n\r\nfunction sum04(v1: number, v2: number = 2): number {    // 4.参数默认值\r\n    return v1 + v2\r\n}\r\n\r\nfunction sum05(...args: number[]): number { // 5.三点运算符\r\n    return 0\r\n}\r\n\r\nfunction callThis(this: string): void {   // 6.标识函数的this类型\r\n    console.log(this)\r\n}\r\n\r\nfunction toArray(val: string): string[] // 7.函数限制（返回对应类型）\r\nfunction toArray(val: number): number[]\r\nfunction toArray(val: string | number): string[] | number[] {\r\n    if (typeof val === 'string') {\r\n        return val.split('')\r\n    }else {\r\n        return val.toString().split('').map(item => +item)\r\n    }\r\n}\r\nlet arr = toArray(123)\r\n\r\nexport default {}","// import baseData from './001.基础数据类型'\r\nimport fnType from './002.函数的类型'\r\n\r\n// console.log(baseData)\r\nconsole.log(fnType)\r\n\r\n// let aaa:string = '333'\r\n// console.log(aaa)\r\n"],"names":[],"mappings":";;;;;IA2BA,SAAS,OAAO,CAAC,GAAoB;QACjC,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;YACzB,OAAO,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAA;SACvB;aAAK;YACF,OAAO,GAAG,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,CAAA;SACrD;IACL,CAAC;IACS,OAAO,CAAC,GAAG,EAAC;AAEtB,iBAAe,EAAE;;ICpCjB;IAGA;IACA,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;IAEnB;IACA;;;;;;"}